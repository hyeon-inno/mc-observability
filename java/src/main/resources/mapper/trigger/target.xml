<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mcmp.mc.observability.agent.trigger.mapper.TriggerTargetMapper">
    <resultMap id="triggerTargetResultMap" type="mcmp.mc.observability.agent.trigger.model.TriggerTargetInfo">
        <result column="seq" property="seq" />
        <result column="policy_seq" property="policySeq" />
        <result column="host_seq" property="hostSeq" />
        <result column="name" property="hostname" />
        <result column="ex" property="ex" />
        <result column="create_at" property="createAt" />
        <result column="update_at" property="updateAt" />
    </resultMap>

    <sql id="targeteWhere">
        <where>
            <if test='seq != null'>
                AND SEQ = #{seq}
            </if>
            <if test='policySeq != null'>
                AND POLICY_SEQ = #{policySeq}
            </if>
            <if test='hostSeq != null'>
                AND HOST_SEQ = #{hostSeq}
            </if>
            <if test='hostname != null'>
                AND `HOSTNAME` = #{hostname}
            </if>
        </where>
    </sql>

    <sql id="targetPageableWhere">
        <where>
            <if test='data.seq != null'>
                AND SEQ = #{data.seq}
            </if>
            <if test='data.policySeq != null'>
                AND POLICY_SEQ = #{data.policySeq}
            </if>
            <if test='data.hostSeq != null'>
                AND HOST_SEQ = #{data.hostSeq}
            </if>
            <if test='data.hostname != null'>
                AND `HOSTNAME` = #{data.hostname}
            </if>
        </where>
    </sql>

    <select id="getDetail" resultMap="triggerTargetResultMap">
        SELECT TT.SEQ,
               TT.POLICY_SEQ,
               TT.HOST_SEQ,
               AH.HOSTNAME,
               AH.EX,
               TT.CREATE_AT,
               TT.UPDATE_AT
        FROM m_cmp_trigger_target TT
        LEFT JOIN m_cmp_agent_host AH ON TT.HOST_SEQ = AH.SEQ
        WHERE SEQ = #{seq}
    </select>

    <select id="getListCount" resultType="Long">
        SELECT COUNT(*)
        FROM (
            SELECT 1
            FROM m_cmp_trigger_target TT
            LEFT JOIN m_cmp_agent_host AH ON TT.HOST_SEQ = AH.SEQ
            <include refid="targetPageableWhere"/>
            <include refid="mcmp.mc.observability.agent.pageFilter" />
        ) AS A
    </select>

    <select id="getList" resultMap="triggerTargetResultMap">
        SELECT TT.SEQ,
               TT.POLICY_SEQ,
               TT.HOST_SEQ,
               AH.NAME,
               AH.EX,
               TT.CREATE_AT,
               TT.UPDATE_AT
        FROM m_cmp_trigger_target TT
        LEFT JOIN m_cmp_agent_host AH ON TT.HOST_SEQ = AH.SEQ
        <include refid="targetPageableWhere"/>
        <include refid="mcmp.mc.observability.agent.pageFilter" />
        <include refid="mcmp.mc.observability.agent.orderBy" />
        <include refid="mcmp.mc.observability.agent.pageFooter" />
    </select>

    <select id="getListPolicySeq" resultMap="triggerTargetResultMap">
        SELECT SEQ,
                POLICY_SEQ,
                HOST_SEQ,
                CREATE_AT,
                UPDATE_AT
        FROM m_cmp_trigger_target
        WHERE POLICY_SEQ = #{policySeq}
    </select>

    <insert id="createTarget">
        INSERT INTO m_cmp_trigger_target(SEQ, POLICY_SEQ, HOST_SEQ)
        VALUES (
                 #{seq}
               , #{policySeq}
               , #{hostSeq}
               )

        <selectKey resultType="Long" keyProperty="seq" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <delete id="deleteTriggerTargetBySeq" parameterType="Long">
        DELETE FROM m_cmp_trigger_target
        WHERE SEQ = #{seq}
    </delete>
</mapper>